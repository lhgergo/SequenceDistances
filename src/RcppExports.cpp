// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// GranthamDistance
NumericMatrix GranthamDistance(StringVector peptides1, StringVector peptides2);
RcppExport SEXP _SequenceDistances_GranthamDistance(SEXP peptides1SEXP, SEXP peptides2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type peptides1(peptides1SEXP);
    Rcpp::traits::input_parameter< StringVector >::type peptides2(peptides2SEXP);
    rcpp_result_gen = Rcpp::wrap(GranthamDistance(peptides1, peptides2));
    return rcpp_result_gen;
END_RCPP
}
// BLOSUM62sim
NumericMatrix BLOSUM62sim(StringVector peptides1, StringVector peptides2);
RcppExport SEXP _SequenceDistances_BLOSUM62sim(SEXP peptides1SEXP, SEXP peptides2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type peptides1(peptides1SEXP);
    Rcpp::traits::input_parameter< StringVector >::type peptides2(peptides2SEXP);
    rcpp_result_gen = Rcpp::wrap(BLOSUM62sim(peptides1, peptides2));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SequenceDistances_GranthamDistance", (DL_FUNC) &_SequenceDistances_GranthamDistance, 2},
    {"_SequenceDistances_BLOSUM62sim", (DL_FUNC) &_SequenceDistances_BLOSUM62sim, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_SequenceDistances(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
